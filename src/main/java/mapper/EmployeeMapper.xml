<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="po.Employee" >
    <id column="E_NO" property="eNo" jdbcType="BIGINT" />
    <result column="E_NAME" property="eName" jdbcType="VARCHAR" />
    <result column="E_PSW" property="ePsw" jdbcType="VARCHAR" />
    <result column="E_TEL" property="eTel" jdbcType="VARCHAR" />
    <result column="E_BDATE" property="eBdate" jdbcType="DATE" />
    <result column="E_DEVELOP_NO" property="eDevelopNo" jdbcType="BIGINT" />
    <result column="E_SEX" property="eSex" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    E_NO, E_NAME, E_PSW, E_TEL, E_BDATE, E_DEVELOP_NO, E_SEX
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="po.EmployeeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where E_NO = #{eNo,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from employee
    where E_NO = #{eNo,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="po.EmployeeExample" >
    delete from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Employee" >
    insert into employee (E_NO, E_NAME, E_PSW, 
      E_TEL, E_BDATE, E_DEVELOP_NO, 
      E_SEX)
    values (#{eNo,jdbcType=BIGINT}, #{eName,jdbcType=VARCHAR}, #{ePsw,jdbcType=VARCHAR}, 
      #{eTel,jdbcType=VARCHAR}, #{eBdate,jdbcType=DATE}, #{eDevelopNo,jdbcType=BIGINT}, 
      #{eSex,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="po.Employee" >
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eNo != null" >
        E_NO,
      </if>
      <if test="eName != null" >
        E_NAME,
      </if>
      <if test="ePsw != null" >
        E_PSW,
      </if>
      <if test="eTel != null" >
        E_TEL,
      </if>
      <if test="eBdate != null" >
        E_BDATE,
      </if>
      <if test="eDevelopNo != null" >
        E_DEVELOP_NO,
      </if>
      <if test="eSex != null" >
        E_SEX,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eNo != null" >
        #{eNo,jdbcType=BIGINT},
      </if>
      <if test="eName != null" >
        #{eName,jdbcType=VARCHAR},
      </if>
      <if test="ePsw != null" >
        #{ePsw,jdbcType=VARCHAR},
      </if>
      <if test="eTel != null" >
        #{eTel,jdbcType=VARCHAR},
      </if>
      <if test="eBdate != null" >
        #{eBdate,jdbcType=DATE},
      </if>
      <if test="eDevelopNo != null" >
        #{eDevelopNo,jdbcType=BIGINT},
      </if>
      <if test="eSex != null" >
        #{eSex,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.EmployeeExample" resultType="java.lang.Integer" >
    select count(*) from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employee
    <set >
      <if test="record.eNo != null" >
        E_NO = #{record.eNo,jdbcType=BIGINT},
      </if>
      <if test="record.eName != null" >
        E_NAME = #{record.eName,jdbcType=VARCHAR},
      </if>
      <if test="record.ePsw != null" >
        E_PSW = #{record.ePsw,jdbcType=VARCHAR},
      </if>
      <if test="record.eTel != null" >
        E_TEL = #{record.eTel,jdbcType=VARCHAR},
      </if>
      <if test="record.eBdate != null" >
        E_BDATE = #{record.eBdate,jdbcType=DATE},
      </if>
      <if test="record.eDevelopNo != null" >
        E_DEVELOP_NO = #{record.eDevelopNo,jdbcType=BIGINT},
      </if>
      <if test="record.eSex != null" >
        E_SEX = #{record.eSex,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employee
    set E_NO = #{record.eNo,jdbcType=BIGINT},
      E_NAME = #{record.eName,jdbcType=VARCHAR},
      E_PSW = #{record.ePsw,jdbcType=VARCHAR},
      E_TEL = #{record.eTel,jdbcType=VARCHAR},
      E_BDATE = #{record.eBdate,jdbcType=DATE},
      E_DEVELOP_NO = #{record.eDevelopNo,jdbcType=BIGINT},
      E_SEX = #{record.eSex,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.Employee" >
    update employee
    <set >
      <if test="eName != null" >
        E_NAME = #{eName,jdbcType=VARCHAR},
      </if>
      <if test="ePsw != null" >
        E_PSW = #{ePsw,jdbcType=VARCHAR},
      </if>
      <if test="eTel != null" >
        E_TEL = #{eTel,jdbcType=VARCHAR},
      </if>
      <if test="eBdate != null" >
        E_BDATE = #{eBdate,jdbcType=DATE},
      </if>
      <if test="eDevelopNo != null" >
        E_DEVELOP_NO = #{eDevelopNo,jdbcType=BIGINT},
      </if>
      <if test="eSex != null" >
        E_SEX = #{eSex,jdbcType=VARCHAR},
      </if>
    </set>
    where E_NO = #{eNo,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Employee" >
    update employee
    set E_NAME = #{eName,jdbcType=VARCHAR},
      E_PSW = #{ePsw,jdbcType=VARCHAR},
      E_TEL = #{eTel,jdbcType=VARCHAR},
      E_BDATE = #{eBdate,jdbcType=DATE},
      E_DEVELOP_NO = #{eDevelopNo,jdbcType=BIGINT},
      E_SEX = #{eSex,jdbcType=VARCHAR}
    where E_NO = #{eNo,jdbcType=BIGINT}
  </update>
</mapper>